/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Write your model definitions here
 */

namespace monsoon.apptellect.com

participant SampleParticipant identified by participantId {
  o String participantId
  o String firstName
  o String lastName
}

enum CropType {
  o COTTON
  o WHEAT
  o VEGETABLE
  o FRUIT
  o SUGARCANE
  o RICE
}

enum CropStatus {
  o PRESEED
  o SEEDED 
  o HARVESTED
  o SOLD
  o REPORTED_DESTROYED
  o REPORTED_DAMAGED
  o NOT_VARIFIABLE
  o UNDER_INVESTIGATION
  o FRADULANT
  o FUNDED
  o VOID
}

enum Currency {
  o US_DOLLAR
  o INDIAN_RUPEE 
  o PAKISTANI_RUPEE
  o SRILANKA_RUPEE
  o BHUTANESE_NGULTRUM
  o BANGLADESHI_TAKA
  o MALDIVIAN_RUFIYAA
  o CANADIAN_DOLLAR
}

enum PledgeStatus {
  o NONCOMMITTED
  o COMMITTED 
  o IN_REVIEW
  o PAYMENT_AUTHORIZED
  o EXPIRED
  o PAID 
  o VOID
}

enum EntityType {
  o INDIVIDUAL
  o NONPROFIT
  o GOVERNMENT
  o FORPROFIT
}

asset Pledge identified by pledgeId {
  o String pledgeId
  o Double amount
  o Currency pledgeCurrency default = 'US_DOLLAR'
  o PledgeStatus status default = 'NONCOMMITTED'
  --> Donor donor
}

@foo("arg1", 2)
participant Donor identified by donorId{
  o String donorId
  o EntityType donorType
  o  ContactDetails contact optional
}

participant Developer identified by developerId{
  o String developerId
  o ContactDetails contact 
}


participant Monitor identified by monitorId {
  o String monitorId
  o EntityType monitorType
  o ContactDetails contact
}

enum CountryList {
  o BANGLADESH
  o BHUTAN
  o INDIA
  o MALDIVES
  o PAKISTAN
  o SRILANKA
}

concept ContactDetails {
  o String phoneNumber
  o String email optional
  o String street1 optional
  o String street2 optional
  o String city optional 
  o String province optional 
  o CountryList country 
}

participant Farmer identified by farmerId {
  o String farmerId
  o String firstName
  o String[] middleName optional
  o String lastName 
  o ContactDetails contactInfo optional
}

concept Coordinates {
  o Double lattitude
  o Double longitude
}

concept Photo {
  o String location
  o Coordinates photoCoordinates
}
concept Precipitation {
  o DateTime date
  o Double value
}

asset Crop identified by cropId {
  o String cropId
  o CropType typeOfCrop
  o Coordinates[] cropCoordinates optional
  o String cropSubType optional
  o Photo[] cropPhotos optional
  o Precipitation[] precipitationHistory optional
  o Double cropArea optional
  o Double maxYieldValue optional
  o Currency cropCurrency optional
  o DateTime seedingDate optional
  o DateTime harvestDate optional
  o CropStatus status default = "PRESEED"
  --> Farmer farmerOwner
  --> Pledge[] cropPledges optional
}

transaction tx_createNewCrop {
  o String cropId
  o CropType typeOfCrop
  --> Farmer farmer
}

transaction tx_setSingleCropCoordinates {
o String cropId
o Coordinates singleSetCoordinates
}

transaction tx_setMultipleCropCoordinates {
  o String cropId 
  o Coordinates[] cropCoordinates
}

asset SampleAsset identified by assetId {
  o String assetId
  --> SampleParticipant owner
  o String value
}

transaction tx_commitPledgeToCrop {
  o String pledgeId
  o String cropId
}

event tx_commitPledgeToCropEvent {
  --> Pledge pledge
}

transaction tx_addPhotoToCrop {
  o String cropId
  o Photo newPhoto
}

transaction tx_addCropPrecipitationValue{
  o String cropId
  o Precipitation newPrecipitationValue
}

transaction tx_setCropArea{
  o String cropId
  o Double newArea
}

transaction tx_setCropMaxYieldValue{
  o String cropId
  o Double newMaxYieldValue
}

transaction tx_setCropCurrency{
  o String cropId
  o Currency newCropCurrency
}

transaction tx_setCropSeedingDate{
  o String cropId
  o DateTime newSeedingDate
}

transaction tx_setCropHarvestDate{
  o String cropId
  o DateTime newHarvestDate
}

transaction tx_setCropStaus {
  o String cropId
  o CropStatus newStatus
}

event tx_setCropStatusEvent{

}

transaction tx_setPledgeStatus {
  o String pledgeId
  o PledgeStatus newStatus
}

event tx_setPledgeStatusEvent {

}

transaction SampleTransaction {
  --> SampleAsset asset
  o String newValue
}

transaction tx_getEconomicModels {

}

event SampleEvent {
  --> SampleAsset asset
  o String oldValue
  o String newValue
}
